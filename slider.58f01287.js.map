{"version":3,"sources":["js/slider.js"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","e","document","createEvent","initCustomEvent","WRAPPER_SELECTOR","ITEMS_SELECTOR","ITEM_SELECTOR","CONTROL_CLASS","ITEM_CLASS_ACTIVE","CONTROL_SELECTOR","CONTROL_CLASS_SHOW","INDICATOR_WRAPPER_ELEMENT","INDICATOR_WRAPPER_CLASS","INDICATOR_ITEM_ELEMENT","INDICATOR_ITEM_CLASS","INDICATOR_ITEM_CLASS_ACTIVE","POS_THRESHOLD","TRANSITION_NONE","SELECTOR_INDICATOR","SLIDER_TRANSITION_OFF","CLASS_ITEM_ACTIVE","CLASS_INDICATOR_ACTIVE","ChiefSlider","selector","config","$root","querySelector","key","_$root","_$wrapper","_$items","_$itemList","querySelectorAll","_$indicatorList","_minOrder","_maxOrder","_$itemWithMinOrder","_$itemWithMaxOrder","_minTranslate","_maxTranslate","_direction","_balancingItemsFlag","_activeItems","_transform","_hasSwipeState","__swipeStartPos","_intervalId","_config","loop","autoplay","interval","refresh","swipe","hasOwnProperty","$itemList","widthItem","offsetWidth","widthWrapper","itemsInVisibleArea","Math","round","_widthItem","_widthWrapper","_itemsInVisibleArea","_transformStep","i","length","dataset","index","order","translate","push","count","style","transform","__refreshExtremeValues","_setActiveClass","_addEventListener","_updateIndicators","_autoplay","prototype","$items","onSwipeStart","type","search","touches","_swipeStartPos","clientX","onSwipeEnd","changedTouches","diffPos","_move","addEventListener","onClick","target","bind","onMouseEnter","onMouseLeave","onResize","requestAnimationFrame","_refresh","onTransitionStart","_balancingItems","onTransitionEnd","onDragStart","preventDefault","onVisibilityChange","visibilityState","_$itemByMinOrder","_$itemByMaxOrder","$item","$wrapper","$wrapperClientRect","getBoundingClientRect","widthHalfItem","width","wrapperLeft","left","$min","right","concat","wrapperRight","$max","activeItems","indexOf","classList","add","remove","$indicatorList","contains","step","endTransformValue","_$controlPrev","CLASS_CONTROL_HIDE","_$controlNext","activeIndex","newIndex","dispatchEvent","_moveToNext","_moveToPrev","_moveTo","nearestIndex","diff","$indicator","slideTo","abs","action","clearInterval","setInterval","position","elms","len","next","prev","moveTo"],"mappings":";CACA,WACQ,GAA8B,mBAAvBA,OAAOC,YAA4B,OAAO,EAOrDD,OAAOC,YANEA,SAAYC,EAAOC,GAC1BA,EAASA,GAAU,CAACC,SAAS,EAAOC,YAAY,EAAOC,OAAQ,MAC3DC,IAAAA,EAAIC,SAASC,YAAY,eAEtBF,OADPA,EAAEG,gBAAgBR,EAAOC,EAAOC,QAASD,EAAOE,WAAYF,EAAOG,QAC5DC,GANb,GAWE,IAAII,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAgB,gBACfC,EAAgB,kBAEhBC,EAAoB,sBACrBC,EAAmB,mBACnBC,EAAqB,uBAGrBC,EAA4B,KAC5BC,EAA0B,qBAC1BC,EAAyB,KACzBC,EAAuB,oBACvBC,EAA8B,2BAE9BC,EAAgB,GAEhBC,EAAkB,kBAIlBC,EAAqB,yBACrBC,EAAwB,4BAExBC,EAAoB,sBACpBC,EAAyB,SAE7B,SAASC,EAAYC,EAAUC,GAEzBC,IAAAA,EAA4B,iBAAbF,EACjBtB,SAASyB,cAAcH,GAAYA,EAoChC,IAAA,IAAII,KAnCJC,KAAAA,OAASH,EACTI,KAAAA,UAAYJ,EAAMC,cAActB,GAChC0B,KAAAA,QAAUL,EAAMC,cAAcrB,GAC9B0B,KAAAA,WAAaN,EAAMO,iBAAiB1B,GAGpC2B,KAAAA,gBAAkBR,EAAMO,iBAAiBd,GAEzCgB,KAAAA,UAAY,EACZC,KAAAA,UAAY,EACZC,KAAAA,mBAAqB,KACrBC,KAAAA,mBAAqB,KACrBC,KAAAA,cAAgB,EAChBC,KAAAA,cAAgB,EAEhBC,KAAAA,WAAa,OAEbC,KAAAA,qBAAsB,EACtBC,KAAAA,aAAe,GAEfC,KAAAA,WAAa,EAEbC,KAAAA,gBAAiB,EACjBC,KAAAA,gBAAkB,EAElBF,KAAAA,WAAa,EACbG,KAAAA,YAAc,KAEdC,KAAAA,QAAU,CACbC,MAAM,EACNC,UAAU,EACVC,SAAU,IACVC,SAAS,EACTC,OAAO,GAEO5B,EACV,KAAKuB,QAAQM,eAAe1B,KACzBoB,KAAAA,QAAQpB,GAAOH,EAAOG,IAI3B2B,IAAAA,EAAY,KAAKvB,WACjBwB,EAAYD,EAAU,GAAGE,YACzBC,EAAe,KAAK5B,UAAU2B,YAC9BE,EAAqBC,KAAKC,MAAMH,EAAeF,GAE9CM,KAAAA,WAAaN,EACbO,KAAAA,cAAgBL,EAChBM,KAAAA,oBAAsBL,EACtBM,KAAAA,eAAiB,IAAMN,EAEvB,IAAA,IAAIO,EAAI,EAAGC,EAASZ,EAAUY,OAAQD,EAAIC,EAAQD,IACrDX,EAAUW,GAAGE,QAAQC,MAAQH,EAC7BX,EAAUW,GAAGE,QAAQE,MAAQJ,EAC7BX,EAAUW,GAAGE,QAAQG,UAAY,EAC7BL,EAAIP,GACDhB,KAAAA,aAAa6B,KAAKN,GAGvB,GAAA,KAAKlB,QAAQC,KAAM,CAEjBwB,IAAAA,EAAQlB,EAAUY,OAAS,EAC3BI,EAAgC,KAAnBhB,EAAUY,OAC3BZ,EAAUkB,GAAOL,QAAQE,OAAS,EAClCf,EAAUkB,GAAOL,QAAQG,UAAgC,KAAnBhB,EAAUY,OAChDZ,EAAUkB,GAAOC,MAAMC,UAAY,cAAgBJ,EAAY,KAC1DK,KAAAA,yBAMFC,KAAAA,kBACAC,KAAAA,oBACAC,KAAAA,oBACAC,KAAAA,YAIPzD,EAAY0D,UAAUH,kBAAoB,WACpCpD,IAAAA,EAAQ,KAAKG,OACbqD,EAAS,KAAKnD,QACdN,EAAS,KAAKuB,QAmCTmC,SAAAA,EAAalF,GACf+E,KAAAA,UAAU,QACXpF,IAAAA,EAAmC,IAA3BK,EAAEmF,KAAKC,OAAO,SAAiBpF,EAAEqF,QAAQ,GAAKrF,EACrDsF,KAAAA,eAAiB3F,EAAM4F,QACvB3C,KAAAA,gBAAiB,EAEf4C,SAAAA,EAAWxF,GACd,GAAC,KAAK4C,eAAN,CAGAjD,IAAAA,EAAmC,IAA3BK,EAAEmF,KAAKC,OAAO,SAAiBpF,EAAEyF,eAAe,GAAKzF,EAC7D0F,EAAU,KAAKJ,eAAiB3F,EAAM4F,QACtCG,EAAU,IACPlD,KAAAA,WAAa,OACbmD,KAAAA,SACID,GAAW,KACflD,KAAAA,WAAa,OACbmD,KAAAA,SAEF/C,KAAAA,gBAAiB,EAClB,KAAKG,QAAQC,MACV+B,KAAAA,aAgBTtD,EAAMmE,iBAAiB,QAvEdC,SAAQ7F,GACDA,EAAE8F,OACXf,KAAAA,UAAU,QASX,KAAKhC,QAAQC,MACV+B,KAAAA,aA2D+BgB,KAAK,OAC7CtE,EAAMmE,iBAAiB,aAzDdI,SAAahG,GACf+E,KAAAA,UAAU,SAwDiCgB,KAAK,OACvDtE,EAAMmE,iBAAiB,aAvDdK,SAAajG,GACf+E,KAAAA,aAsD2CgB,KAAK,OAEnDvE,EAAO2B,SACT1D,OAAOmG,iBAAiB,SA7CjBM,WACPzG,OAAO0G,sBAAsB,KAAKC,SAASL,KAAK,QA4CLA,KAAK,OAG9CvE,EAAOwB,OACTiC,EAAOW,iBAAiB,mBA3DjBS,WACH,KAAK5D,sBAGJA,KAAAA,qBAAsB,EAC3BhD,OAAO0G,sBAAsB,KAAKG,gBAAgBP,KAAK,SAsDOA,KAAK,OACnEd,EAAOW,iBAAiB,gBArDjBW,WACF9D,KAAAA,qBAAsB,GAoD8BsD,KAAK,QAG5DvE,EAAO4B,QACT3B,EAAMmE,iBAAiB,aAAcV,EAAaa,KAAK,OACvDtE,EAAMmE,iBAAiB,YAAaV,EAAaa,KAAK,OACtD9F,SAAS2F,iBAAiB,WAAYJ,EAAWO,KAAK,OACtD9F,SAAS2F,iBAAiB,UAAWJ,EAAWO,KAAK,QAEvDtE,EAAMmE,iBAAiB,YAhCdY,SAAYxG,GACnBA,EAAEyG,kBA+B4CV,KAAK,OAErD9F,SAAS2F,iBAAiB,mBA/BjBc,WAC0B,WAA7BzG,SAAS0G,gBACN5B,KAAAA,UAAU,QACuB,YAA7B9E,SAAS0G,iBACd,KAAK5D,QAAQC,MACV+B,KAAAA,aA0BsDgB,KAAK,QAIxEzE,EAAY0D,UAAUL,uBAAyB,WACzCrB,IAAAA,EAAY,KAAKvB,WAChBG,KAAAA,WAAaoB,EAAU,GAAGa,QAAQE,MAClClC,KAAAA,UAAY,KAAKD,UACjB0E,KAAAA,iBAAmBtD,EAAU,GAC7BuD,KAAAA,iBAAmBvD,EAAU,GAC7BhB,KAAAA,eAAiBgB,EAAU,GAAGa,QAAQG,UACtC/B,KAAAA,cAAgB,KAAKD,cACrB,IAAA,IAAI2B,EAAI,EAAGC,EAASZ,EAAUY,OAAQD,EAAIC,EAAQD,IAAK,CACtD6C,IAAAA,EAAQxD,EAAUW,GAClBI,GAASyC,EAAM3C,QAAQE,MACvBA,EAAQ,KAAKnC,WACVA,KAAAA,UAAYmC,EACZuC,KAAAA,iBAAmBE,EACnBxE,KAAAA,eAAiBwE,EAAM3C,QAAQG,WAC3BD,EAAQ,KAAKlC,YACjBA,KAAAA,UAAYkC,EACZwC,KAAAA,iBAAmBC,EACnBvE,KAAAA,eAAiBuE,EAAM3C,QAAQG,aAM1ChD,EAAY0D,UAAUsB,gBAAkB,WAClC,GAAC,KAAK7D,oBAAN,CAGAsE,IAIAzC,EAHA0C,EADW,KAAKnF,UACcoF,wBAC9BC,EAAgBF,EAAmBG,MAAQ,KAAKpD,oBAAsB,EACtES,EAAQ,KAAKzC,WAAWmC,OAGxB,GAAoB,SAApB,KAAK1B,WAAuB,CAC1B4E,IAAAA,EAAcJ,EAAmBK,KACjCC,EAAO,KAAKV,iBAChBtC,EAAY,KAAKhC,cACJgF,EAAKL,wBACHM,MAAQH,EAAcF,IACnCI,EAAKnD,QAAQE,MAAQ,KAAKnC,UAAYsC,EACtCF,GAAqB,IAARE,EACb8C,EAAKnD,QAAQG,UAAYA,EACzBgD,EAAK7C,MAAMC,UAAY,cAAc8C,OAAOlD,EAAW,MAElDK,KAAAA,8BAEF,CACD8C,IAAAA,EAAeT,EAAmBO,MAClCG,EAAO,KAAKb,iBAChBvC,EAAY,KAAK/B,cACJmF,EAAKT,wBACHI,KAAOI,EAAeP,IACnCQ,EAAKvD,QAAQE,MAAQ,KAAKlC,UAAYqC,EACtCF,GAAqB,IAARE,EACbkD,EAAKvD,QAAQG,UAAYA,EACzBoD,EAAKjD,MAAMC,UAAY,cAAc8C,OAAOlD,EAAW,MAElDK,KAAAA,0BAITwB,sBAAsB,KAAKG,gBAAgBP,KAAK,SAIlDzE,EAAY0D,UAAUJ,gBAAkB,WAGjC,IAFD+C,IAAAA,EAAc,KAAKjF,aACnBY,EAAY,KAAKvB,WACZkC,EAAI,EAAGC,EAASZ,EAAUY,OAAQD,EAAIC,EAAQD,IAAK,CACtD6C,IAAAA,EAAQxD,EAAUW,GAClBG,GAAS0C,EAAM3C,QAAQC,MACvBuD,EAAYC,QAAQxD,IAAU,EAChC0C,EAAMe,UAAUC,IAAI1G,GAEpB0F,EAAMe,UAAUE,OAAO3G,KAM7BE,EAAY0D,UAAUF,kBAAoB,WACpCkD,IAAAA,EAAiB,KAAK/F,gBACtBqB,EAAY,KAAKvB,WACjB,GAACiG,EAAe9D,OAGf,IAAA,IAAIE,EAAQ,EAAGF,EAASZ,EAAUY,OAAQE,EAAQF,EAAQE,IAAS,CAC1Dd,EAAUc,GACZyD,UAAUI,SAAS7G,GAC3B4G,EAAe5D,GAAOyD,UAAUC,IAAIzG,GAEpC2G,EAAe5D,GAAOyD,UAAUE,OAAO1G,KAM7CC,EAAY0D,UAAUW,MAAQ,WACxBuC,IAAAA,EACH,SADU,KAAK1F,YACL,KAAKwB,eAAiB,KAAKA,eAClCU,EAAY,KAAK/B,WAAauF,EAC9B,IAAC,KAAKnF,QAAQC,KAAM,CAClBmF,IAAAA,EACF,KAAKnE,gBAAkB,KAAKjC,WAAWmC,OAAS,KAAKH,qBAEnDW,IADJA,EAAYf,KAAKC,MAAkB,GAAZc,GAAkB,KACxByD,GAAqBzD,EAAY,EAChD,OAEG0D,KAAAA,cAAcP,UAAUE,OAAOM,oBAC/BC,KAAAA,cAAcT,UAAUE,OAAOM,oBAChC3D,KAAeyD,EACZG,KAAAA,cAAcT,UAAUC,IAAIO,oBACV,IAAd3D,GACJ0D,KAAAA,cAAcP,UAAUC,IAAIO,oBAGjCE,IAEArE,EACAE,EACAoE,EAJAD,EAAc,GACdtE,EAAI,EAIJ,GAAoB,SAApB,KAAKzB,WACFyB,IAAAA,EAAI,EAAGC,EAAS,KAAKxB,aAAawB,OAAQD,EAAIC,EAAQD,IACzDG,EAAQ,KAAK1B,aAAauB,IAC1BuE,IAAapE,GACE,KAAKrC,WAAWmC,OAAS,IACtCsE,GAAY,KAAKzG,WAAWmC,QAE9BqE,EAAYhE,KAAKiE,QAGdvE,IAAAA,EAAI,EAAGC,EAAS,KAAKxB,aAAawB,OAAQD,EAAIC,EAAQD,IACzDG,EAAQ,KAAK1B,aAAauB,IAC1BuE,IAAapE,GACE,IACboE,GAAY,KAAKzG,WAAWmC,QAE9BqE,EAAYhE,KAAKiE,GAGhB9F,KAAAA,aAAe6F,EACf3D,KAAAA,kBACAE,KAAAA,oBACAnC,KAAAA,WAAa+B,EACb5C,KAAAA,QAAQ2C,MAAMC,UAAY,cAAgBA,EAAY,KACtD5C,KAAAA,QAAQ2G,cAAc,IAAI/I,YAAY,mBAAoB,CAACG,SAAS,MAI3EyB,EAAY0D,UAAU0D,YAAc,WAC7BlG,KAAAA,WAAa,OACbmD,KAAAA,SAIPrE,EAAY0D,UAAU2D,YAAc,WAC7BnG,KAAAA,WAAa,OACbmD,KAAAA,SAIPrE,EAAY0D,UAAU4D,QAAU,SAASxE,GACnC4D,IAGA/D,EACAC,EAJA8D,EAAiB,KAAK/F,gBACtB4G,EAAe,KACfC,EAAO,KAGN7E,IAAAA,EAAI,EAAGC,EAAS8D,EAAe9D,OAAQD,EAAIC,EAAQD,IAAK,CACvD8E,IAAAA,EAAaf,EAAe/D,GAC5B8E,GAAAA,EAAWlB,UAAUI,SAAS5G,GAAyB,CACrD2H,IAAAA,GAAWD,EAAW5E,QAAQ6E,QACrB,OAATF,GACFD,EAAeG,EACfF,EAAOnF,KAAKsF,IAAI7E,EAAQyE,IAEpBlF,KAAKsF,IAAI7E,EAAQ4E,GAAWF,IAC9BD,EAAeG,EACfF,EAAOnF,KAAKsF,IAAI7E,EAAQyE,KAM5BC,GAAS,KADbA,EAAO1E,EAAQyE,GAKV5E,IADAzB,KAAAA,WAAasG,EAAO,EAAI,OAAS,OACjC7E,EAAI,EAAGA,GAAKN,KAAKsF,IAAIH,GAAO7E,IAC1B0B,KAAAA,SAKTrE,EAAY0D,UAAUD,UAAY,SAASmE,GACrC,GAAC,KAAKnG,QAAQE,SAGdiG,MAAW,SAAXA,GACFC,cAAc,KAAKrG,kBACdA,KAAAA,YAAc,YAGI,OAArB,KAAKA,cACFA,KAAAA,YAAcsG,YACf,WACO5G,KAAAA,WAAa,OACbmD,KAAAA,SACLI,KAAK,MACP,KAAKhD,QAAQG,aAMrB5B,EAAY0D,UAAUoB,SAAW,WAE3B9C,IAAAA,EAAY,KAAKvB,WACjBwB,EAAYD,EAAU,GAAGE,YACzBC,EAAe,KAAK5B,UAAU2B,YAC9BE,EAAqBC,KAAKC,MAAMH,EAAeF,GAE/CG,GAAAA,IAAuB,KAAKK,oBAA5BL,CAICqB,KAAAA,UAAU,QAEVjD,KAAAA,QAAQ+F,UAAUC,IAAI3G,GACtBW,KAAAA,QAAQ2C,MAAMC,UAAY,gBAG1Bb,KAAAA,WAAaN,EACbO,KAAAA,cAAgBL,EAChBM,KAAAA,oBAAsBL,EACtBf,KAAAA,WAAa,EACbqB,KAAAA,eAAiB,IAAMN,EACvBjB,KAAAA,qBAAsB,EACtBC,KAAAA,aAAe,GAGf,IAAA,IAAIuB,EAAI,EAAGC,EAASZ,EAAUY,OAAQD,EAAIC,EAAQD,IAAK,CACtD6C,IAAAA,EAAQxD,EAAUW,GAClBoF,EAAWpF,EACf6C,EAAM3C,QAAQC,MAAQiF,EACtBvC,EAAM3C,QAAQE,MAAQgF,EACtBvC,EAAM3C,QAAQG,UAAY,EAC1BwC,EAAMrC,MAAMC,UAAY,gBACpB2E,EAAW3F,GACRhB,KAAAA,aAAa6B,KAAK8E,GAItBzE,KAAAA,kBACAE,KAAAA,oBACLrF,OAAO0G,sBACH,WACOrE,KAAAA,QAAQ+F,UAAUE,OAAO5G,IAC9B4E,KAAK,OAYPvB,IAAAA,EAAQlB,EAAUY,OAAS,EAC3BI,EAAgC,KAAnBhB,EAAUY,OAC3BZ,EAAUkB,GAAOL,QAAQE,OAAS,EAClCf,EAAUkB,GAAOL,QAAQG,UAAgC,KAAnBhB,EAAUY,OAChDZ,EAAUkB,GAAOC,MAAMC,UAAY,cAAc8C,OAAOlD,EAAW,MAE9DK,KAAAA,yBAEAI,KAAAA,cAEP,IAAIzD,EAAY,WACVrB,SAAS2F,iBAAiB,mBAAoB,WAE7C,IADD0D,IAAAA,EAAOrJ,SAAS+B,iBAAiB,WAC5BiC,EAAI,EAAGsF,EAAMD,EAAKpF,OAAQD,EAAIsF,EAAKtF,IACpC3C,IAAAA,EAAYgI,EAAKrF,MAK3B3C,EAAY0D,UAAUwE,KAAO,WACtBd,KAAAA,eAEPpH,EAAY0D,UAAUyE,KAAO,WACtBd,KAAAA,eAEPrH,EAAY0D,UAAU0E,OAAS,SAAStF,GACjCwE,KAAAA,QAAQxE,IAEf9C,EAAY0D,UAAU7B,QAAU,WACzBiD,KAAAA","file":"slider.58f01287.js","sourceRoot":"../src","sourcesContent":["\n(function() {\n    if (typeof window.CustomEvent === 'function') return false;\n    function CustomEvent(event, params) {\n      params = params || {bubbles: false, cancelable: false, detail: null};\n      var e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return e;\n    }\n    window.CustomEvent = CustomEvent;\n  })();\n  \n  var WRAPPER_SELECTOR = '.slider__wrapper';\n  var ITEMS_SELECTOR = '.slider__items';\n  var ITEM_SELECTOR = '.slider__item';\n   var CONTROL_CLASS = 'slider__control';\n  \n   var ITEM_CLASS_ACTIVE = 'slider__item_active';\n  var CONTROL_SELECTOR = '.slider__control';\n  var CONTROL_CLASS_SHOW = 'slider__control_show';\n  \n  // индикаторы\n  var INDICATOR_WRAPPER_ELEMENT = 'ol';\n  var INDICATOR_WRAPPER_CLASS = 'slider__indicators';\n  var INDICATOR_ITEM_ELEMENT = 'li';\n  var INDICATOR_ITEM_CLASS = 'slider__indicator';\n  var INDICATOR_ITEM_CLASS_ACTIVE = 'slider__indicator_active';\n  // порог для переключения слайда (40%)\n  var POS_THRESHOLD = 40;\n  // класс для отключения transition\n  var TRANSITION_NONE = 'transition-none';\n  \n  //  var SELECTOR_PREV = '.slider__control[data-slide=\"prev\"]';\n  //  var SELECTOR_NEXT = '.slider__control[data-slide=\"next\"]';\n  var SELECTOR_INDICATOR = '.slider__indicators>li';\n  var SLIDER_TRANSITION_OFF = 'slider_disable-transition';\n  // var CLASS_CONTROL_HIDE = 'slider__control_hide';\n  var CLASS_ITEM_ACTIVE = 'slider__item_active';\n  var CLASS_INDICATOR_ACTIVE = 'active';\n  \n  function ChiefSlider(selector, config) {\n    // элементы слайдера\n    var $root = typeof selector === 'string' ?\n      document.querySelector(selector) : selector;\n    this._$root = $root;\n    this._$wrapper = $root.querySelector(WRAPPER_SELECTOR);\n    this._$items = $root.querySelector(ITEMS_SELECTOR);\n    this._$itemList = $root.querySelectorAll(ITEM_SELECTOR);\n    // this._$controlPrev = $root.querySelector(SELECTOR_PREV);\n    // this._$controlNext = $root.querySelector(SELECTOR_NEXT);\n    this._$indicatorList = $root.querySelectorAll(SELECTOR_INDICATOR);\n    // экстремальные значения слайдов\n    this._minOrder = 0;\n    this._maxOrder = 0;\n    this._$itemWithMinOrder = null;\n    this._$itemWithMaxOrder = null;\n    this._minTranslate = 0;\n    this._maxTranslate = 0;\n    // направление смены слайдов (по умолчанию)\n    this._direction = 'next';\n    // determines whether the position of item needs to be determined\n    this._balancingItemsFlag = false;\n    this._activeItems = [];\n    // текущее значение трансформации\n    this._transform = 0;\n    // swipe параметры\n    this._hasSwipeState = false;\n    this.__swipeStartPos = 0;\n    // slider properties\n    this._transform = 0; // текущее значение трансформации\n    this._intervalId = null;\n    // configuration of the slider\n    this._config = {\n      loop: true,\n      autoplay: false,\n      interval: 5000,\n      refresh: true,\n      swipe: true,\n    };\n    for (var key in config) {\n      if (this._config.hasOwnProperty(key)) {\n        this._config[key] = config[key];\n      }\n    }\n    // create some constants\n    var $itemList = this._$itemList;\n    var widthItem = $itemList[0].offsetWidth;\n    var widthWrapper = this._$wrapper.offsetWidth;\n    var itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n    // initial setting properties\n    this._widthItem = widthItem;\n    this._widthWrapper = widthWrapper;\n    this._itemsInVisibleArea = itemsInVisibleArea;\n    this._transformStep = 100 / itemsInVisibleArea;\n    // initial setting order and translate items\n    for (var i = 0, length = $itemList.length; i < length; i++) {\n      $itemList[i].dataset.index = i;\n      $itemList[i].dataset.order = i;\n      $itemList[i].dataset.translate = 0;\n      if (i < itemsInVisibleArea) {\n        this._activeItems.push(i);\n      }\n    }\n    if (this._config.loop) {\n      // перемещаем последний слайд перед первым\n      var count = $itemList.length - 1;\n      var translate = -$itemList.length * 100;\n      $itemList[count].dataset.order = -1;\n      $itemList[count].dataset.translate = -$itemList.length * 100;\n      $itemList[count].style.transform = 'translateX(' + translate + '%)';\n      this.__refreshExtremeValues();\n    } else {\n      // if (this._$controlPrev) {\n      //   this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n      // }\n    }\n    this._setActiveClass();\n    this._addEventListener();\n    this._updateIndicators();\n    this._autoplay();\n  }\n  \n  // подключения обработчиков событий для слайдера\n  ChiefSlider.prototype._addEventListener = function() {\n    var $root = this._$root;\n    var $items = this._$items;\n    var config = this._config;\n    function onClick(e) {\n      var $target = e.target;\n      this._autoplay('stop');\n      // if ($target.classList.contains(CONTROL_CLASS)) {\n      //   e.preventDefault();\n      //   this._direction = $target.dataset.slide;\n      //   this._move();\n      // } else if ($target.dataset.slideTo) {\n      //   var index = parseInt($target.dataset.slideTo);\n      //   this._moveTo(index);\n      // }\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n    function onMouseEnter(e) {\n      this._autoplay('stop');\n    }\n    function onMouseLeave(e) {\n      this._autoplay();\n    }\n    function onTransitionStart() {\n      if (this._balancingItemsFlag) {\n        return;\n      }\n      this._balancingItemsFlag = true;\n      window.requestAnimationFrame(this._balancingItems.bind(this));\n    }\n    function onTransitionEnd() {\n      this._balancingItemsFlag = false;\n    }\n    function onResize() {\n      window.requestAnimationFrame(this._refresh.bind(this));\n    }\n    function onSwipeStart(e) {\n      this._autoplay('stop');\n      var event = e.type.search('touch') === 0 ? e.touches[0] : e;\n      this._swipeStartPos = event.clientX;\n      this._hasSwipeState = true;\n    }\n    function onSwipeEnd(e) {\n      if (!this._hasSwipeState) {\n        return;\n      }\n      var event = e.type.search('touch') === 0 ? e.changedTouches[0] : e;\n      var diffPos = this._swipeStartPos - event.clientX;\n      if (diffPos > 50) {\n        this._direction = 'next';\n        this._move();\n      } else if (diffPos < -50) {\n        this._direction = 'prev';\n        this._move();\n      }\n      this._hasSwipeState = false;\n      if (this._config.loop) {\n        this._autoplay();\n      }\n    }\n    function onDragStart(e) {\n      e.preventDefault();\n    }\n    function onVisibilityChange() {\n      if (document.visibilityState === 'hidden') {\n        this._autoplay('stop');\n      } else if (document.visibilityState === 'visible') {\n        if (this._config.loop) {\n          this._autoplay();\n        }\n      }\n    }\n  \n    $root.addEventListener('click', onClick.bind(this));\n    $root.addEventListener('mouseenter', onMouseEnter.bind(this));\n    $root.addEventListener('mouseleave', onMouseLeave.bind(this));\n    // on resize\n    if (config.refresh) {\n      window.addEventListener('resize', onResize.bind(this));\n    }\n    // on transitionstart and transitionend\n    if (config.loop) {\n      $items.addEventListener('transition-start', onTransitionStart.bind(this));\n      $items.addEventListener('transitionend', onTransitionEnd.bind(this));\n    }\n    // on touchstart and touchend\n    if (config.swipe) {\n      $root.addEventListener('touchstart', onSwipeStart.bind(this));\n      $root.addEventListener('mousedown', onSwipeStart.bind(this));\n      document.addEventListener('touchend', onSwipeEnd.bind(this));\n      document.addEventListener('mouseup', onSwipeEnd.bind(this));\n    }\n    $root.addEventListener('dragstart', onDragStart.bind(this));\n    // при изменении активности вкладки\n    document.addEventListener('visibilitychange', onVisibilityChange.bind(this));\n  };\n  \n  // update values of extreme properties\n  ChiefSlider.prototype.__refreshExtremeValues = function() {\n    var $itemList = this._$itemList;\n    this._minOrder = +$itemList[0].dataset.order;\n    this._maxOrder = this._minOrder;\n    this._$itemByMinOrder = $itemList[0];\n    this._$itemByMaxOrder = $itemList[0];\n    this._minTranslate = +$itemList[0].dataset.translate;\n    this._maxTranslate = this._minTranslate;\n    for (var i = 0, length = $itemList.length; i < length; i++) {\n      var $item = $itemList[i];\n      var order = +$item.dataset.order;\n      if (order < this._minOrder) {\n        this._minOrder = order;\n        this._$itemByMinOrder = $item;\n        this._minTranslate = +$item.dataset.translate;\n      } else if (order > this._maxOrder) {\n        this._maxOrder = order;\n        this._$itemByMaxOrder = $item;\n        this._maxTranslate = +$item.dataset.translate;\n      }\n    }\n  };\n  \n  // update position of item\n  ChiefSlider.prototype._balancingItems = function() {\n    if (!this._balancingItemsFlag) {\n      return;\n    }\n    var $wrapper = this._$wrapper;\n    var $wrapperClientRect = $wrapper.getBoundingClientRect();\n    var widthHalfItem = $wrapperClientRect.width / this._itemsInVisibleArea / 2;\n    var count = this._$itemList.length;\n    var translate;\n    var clientRect;\n    if (this._direction === 'next') {\n      var wrapperLeft = $wrapperClientRect.left;\n      var $min = this._$itemByMinOrder;\n      translate = this._minTranslate;\n      clientRect = $min.getBoundingClientRect();\n      if (clientRect.right < wrapperLeft - widthHalfItem) {\n        $min.dataset.order = this._minOrder + count;\n        translate += count * 100;\n        $min.dataset.translate = translate;\n        $min.style.transform = 'translateX('.concat(translate, '%)');\n        // update values of extreme properties\n        this.__refreshExtremeValues();\n      }\n    } else {\n      var wrapperRight = $wrapperClientRect.right;\n      var $max = this._$itemByMaxOrder;\n      translate = this._maxTranslate;\n      clientRect = $max.getBoundingClientRect();\n      if (clientRect.left > wrapperRight + widthHalfItem) {\n        $max.dataset.order = this._maxOrder - count;\n        translate -= count * 100;\n        $max.dataset.translate = translate;\n        $max.style.transform = 'translateX('.concat(translate, '%)');\n        // update values of extreme properties\n        this.__refreshExtremeValues();\n      }\n    }\n    // updating...\n    requestAnimationFrame(this._balancingItems.bind(this));\n  };\n  \n  // _setActiveClass\n  ChiefSlider.prototype._setActiveClass = function() {\n    var activeItems = this._activeItems;\n    var $itemList = this._$itemList;\n    for (var i = 0, length = $itemList.length; i < length; i++) {\n      var $item = $itemList[i];\n      var index = +$item.dataset.index;\n      if (activeItems.indexOf(index) > -1) {\n        $item.classList.add(CLASS_ITEM_ACTIVE);\n      } else {\n        $item.classList.remove(CLASS_ITEM_ACTIVE);\n      }\n    }\n  };\n  \n  // _updateIndicators\n  ChiefSlider.prototype._updateIndicators = function() {\n    var $indicatorList = this._$indicatorList;\n    var $itemList = this._$itemList;\n    if (!$indicatorList.length) {\n      return;\n    }\n    for (var index = 0, length = $itemList.length; index < length; index++) {\n      var $item = $itemList[index];\n      if ($item.classList.contains(CLASS_ITEM_ACTIVE)) {\n        $indicatorList[index].classList.add(CLASS_INDICATOR_ACTIVE);\n      } else {\n        $indicatorList[index].classList.remove(CLASS_INDICATOR_ACTIVE);\n      }\n    }\n  };\n  \n  // move slides\n  ChiefSlider.prototype._move = function() {\n    var step = this._direction ===\n     'next' ? -this._transformStep : this._transformStep;\n    var transform = this._transform + step;\n    if (!this._config.loop) {\n      var endTransformValue =\n        this._transformStep * (this._$itemList.length - this._itemsInVisibleArea);\n      transform = Math.round(transform * 10) / 10;\n      if (transform < -endTransformValue || transform > 0) {\n        return;\n      }\n      this._$controlPrev.classList.remove(CLASS_CONTROL_HIDE);\n      this._$controlNext.classList.remove(CLASS_CONTROL_HIDE);\n      if (transform === -endTransformValue) {\n        this._$controlNext.classList.add(CLASS_CONTROL_HIDE);\n      } else if (transform === 0) {\n        this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n      }\n    }\n    var activeIndex = [];\n    var i = 0;\n    var length;\n    var index;\n    var newIndex;\n    if (this._direction === 'next') {\n      for (i = 0, length = this._activeItems.length; i < length; i++) {\n        index = this._activeItems[i];\n        newIndex = ++index;\n        if (newIndex > this._$itemList.length - 1) {\n          newIndex -= this._$itemList.length;\n        }\n        activeIndex.push(newIndex);\n      }\n    } else {\n      for (i = 0, length = this._activeItems.length; i < length; i++) {\n        index = this._activeItems[i];\n        newIndex = --index;\n        if (newIndex < 0) {\n          newIndex += this._$itemList.length;\n        }\n        activeIndex.push(newIndex);\n      }\n    }\n    this._activeItems = activeIndex;\n    this._setActiveClass();\n    this._updateIndicators();\n    this._transform = transform;\n    this._$items.style.transform = 'translateX(' + transform + '%)';\n    this._$items.dispatchEvent(new CustomEvent('transition-start', {bubbles: true}));\n  };\n  \n  // _moveToNext\n  ChiefSlider.prototype._moveToNext = function() {\n    this._direction = 'next';\n    this._move();\n  };\n  \n  // _moveToPrev\n  ChiefSlider.prototype._moveToPrev = function() {\n    this._direction = 'prev';\n    this._move();\n  };\n  \n  // _moveTo\n  ChiefSlider.prototype._moveTo = function(index) {\n    var $indicatorList = this._$indicatorList;\n    var nearestIndex = null;\n    var diff = null;\n    var i;\n    var length;\n    for (i = 0, length = $indicatorList.length; i < length; i++) {\n      var $indicator = $indicatorList[i];\n      if ($indicator.classList.contains(CLASS_INDICATOR_ACTIVE)) {\n        var slideTo = +$indicator.dataset.slideTo;\n        if (diff === null) {\n          nearestIndex = slideTo;\n          diff = Math.abs(index - nearestIndex);\n        } else {\n          if (Math.abs(index - slideTo) < diff) {\n            nearestIndex = slideTo;\n            diff = Math.abs(index - nearestIndex);\n          }\n        }\n      }\n    }\n    diff = index - nearestIndex;\n    if (diff === 0) {\n      return;\n    }\n    this._direction = diff > 0 ? 'next' : 'prev';\n    for (i = 1; i <= Math.abs(diff); i++) {\n      this._move();\n    }\n  };\n  \n  // _autoplay\n  ChiefSlider.prototype._autoplay = function(action) {\n    if (!this._config.autoplay) {\n      return;\n    }\n    if (action === 'stop') {\n      clearInterval(this._intervalId);\n      this._intervalId = null;\n      return;\n    }\n    if (this._intervalId === null) {\n      this._intervalId = setInterval(\n          function() {\n            this._direction = 'next';\n            this._move();\n          }.bind(this),\n          this._config.interval\n      );\n    }\n  };\n  \n  // _refresh\n  ChiefSlider.prototype._refresh = function() {\n    // create some constants\n    var $itemList = this._$itemList;\n    var widthItem = $itemList[0].offsetWidth;\n    var widthWrapper = this._$wrapper.offsetWidth;\n    var itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n  \n    if (itemsInVisibleArea === this._itemsInVisibleArea) {\n      return;\n    }\n  \n    this._autoplay('stop');\n  \n    this._$items.classList.add(SLIDER_TRANSITION_OFF);\n    this._$items.style.transform = 'translateX(0)';\n  \n    // setting properties after reset\n    this._widthItem = widthItem;\n    this._widthWrapper = widthWrapper;\n    this._itemsInVisibleArea = itemsInVisibleArea;\n    this._transform = 0;\n    this._transformStep = 100 / itemsInVisibleArea;\n    this._balancingItemsFlag = false;\n    this._activeItems = [];\n  \n    // setting order and translate items after reset\n    for (var i = 0, length = $itemList.length; i < length; i++) {\n      var $item = $itemList[i];\n      var position = i;\n      $item.dataset.index = position;\n      $item.dataset.order = position;\n      $item.dataset.translate = 0;\n      $item.style.transform = 'translateX(0)';\n      if (position < itemsInVisibleArea) {\n        this._activeItems.push(position);\n      }\n    }\n  \n    this._setActiveClass();\n    this._updateIndicators();\n    window.requestAnimationFrame(\n        function() {\n          this._$items.classList.remove(SLIDER_TRANSITION_OFF);\n        }.bind(this)\n    );\n  \n    // hide prev arrow for non-infinite slider\n    // if (!this._config.loop) {\n    //   if (this._$controlPrev) {\n    //     this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    //   }\n    //   return;\n    // }\n  \n    // translate last item before first\n    var count = $itemList.length - 1;\n    var translate = -$itemList.length * 100;\n    $itemList[count].dataset.order = -1;\n    $itemList[count].dataset.translate = -$itemList.length * 100;\n    $itemList[count].style.transform = 'translateX('.concat(translate, '%)');\n    // update values of extreme properties\n    this.__refreshExtremeValues();\n    // calling _autoplay\n    this._autoplay();\n  };\n  new ChiefSlider('.slider');\n        document.addEventListener('DOMContentLoaded', function() {\n    var elms = document.querySelectorAll('.slider');\n    for (var i = 0, len = elms.length; i < len; i++) {\n        new ChiefSlider(elms[i]);\n    }\n  });\n  \n  // public\n  ChiefSlider.prototype.next = function() {\n    this._moveToNext();\n  };\n  ChiefSlider.prototype.prev = function() {\n    this._moveToPrev();\n  };\n  ChiefSlider.prototype.moveTo = function(index) {\n    this._moveTo(index);\n  };\n  ChiefSlider.prototype.refresh = function() {\n    this._refresh();\n  };"]}